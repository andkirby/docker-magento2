#
# This file is automatically generated. Do not edit directly.
#

FROM php:7.2-cli

MAINTAINER Nick Jones <nick@nicksays.co.uk>

ADD . /container-files

RUN true \
  && cp /container-files/etc/php-cli.ini    /usr/local/etc/php/conf.d/zz-magento.ini \
  && cp /container-files/etc/php-xdebug.ini /usr/local/etc/php/conf.d/zz-xdebug-settings.ini \
  && cp /container-files/etc/mail.ini       /usr/local/etc/php/conf.d/zz-mail.ini \
  && cp /container-files/docker-entrypoint.sh /docker-entrypoint.sh \

  # set up binaries
  && cp /container-files/bin/* /usr/local/bin/ \
  && cp /usr/local/bin/magento-command /usr/local/bin/magento \
  && chmod +x \
    /usr/local/bin/magento-installer \
    /usr/local/bin/magento-command \
    /usr/local/bin/magento \
    /usr/local/bin/magerun2 \
    /usr/local/bin/run-cron \

  # remove copied files
  && rm -rf /container-files \

  && chmod +x /docker-entrypoint.sh \

  # Install dependencies
  && apt-get update \
  && apt-get install -y \
    libfreetype6-dev \ 
    libicu-dev \ 
    libjpeg62-turbo-dev \ 
    libmcrypt-dev \ 
    libpng-dev \ 
    libxslt1-dev \ 
    sendmail-bin \ 
    sendmail \ 
    sudo \ 
    cron \ 
    rsyslog \ 
    mysql-client \ 
    git \
    unzip \
    nano \

  # Configure the gd library
  && docker-php-ext-configure \
  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \

  # Install required PHP extensions
  && docker-php-ext-install \
  dom \ 
  gd \ 
  intl \ 
  mbstring \ 
  pdo_mysql \ 
  xsl \ 
  zip \ 
  soap \ 
  bcmath \

  # Install Xdebug (but don't enable)
  && pecl install -o -f xdebug \
  && docker-php-ext-enable xdebug.so \
  && curl -Ls https://raw.github.com/rikby/xdebug-switcher/master/download | bash \
  && xd_swi off \

  # set up bash aliases and PS1 view
  && curl -Ls bit.ly/bash-init | bash \
  && curl -Ls bit.ly/bash-ps1 | bash \
  && echo '# get to docroot directory' >> ~/.bashrc \
  && echo '[ "${set_path_load:-0}" != 1 ] && [ ${PWD} != /var/www/magento ] && cd /var/www/magento && export set_path_load=1' >> ~/.bashrc \
  && echo >> ~/.bashrc \

  # Get composer installed to /usr/local/bin/composer
  # composer installation
  && curl -sS https://getcomposer.org/installer \
    | php -- --install-dir=/usr/local/bin --filename=composer \

  # Install n98-magerun2.phar and move to /usr/local/bin/
  && curl -O https://files.magerun.net/n98-magerun2.phar && chmod +x ./n98-magerun2.phar && mv ./n98-magerun2.phar /usr/local/bin/ \

  # Install magedbm2.phar and move to /usr/local/bin
  && curl -LO https://s3.eu-west-2.amazonaws.com/magedbm2-releases/magedbm2.phar && chmod +x ./magedbm2.phar && mv ./magedbm2.phar /usr/local/bin \

  # Install mageconfigsync and move to /usr/local/bin
  && curl -L https://github.com/punkstar/mageconfigsync/releases/download/0.5.0-beta.1/mageconfigsync-0.5.0-beta.1.phar > mageconfigsync.phar \
  && chmod +x ./mageconfigsync.phar && mv ./mageconfigsync.phar /usr/local/bin

# ENV PHP_MEMORY_LIMIT -1
# ENV PHP_ENABLE_XDEBUG false
ENV MAGENTO_ROOT /var/www/magento
# ENV DEBUG false
# ENV UPDATE_UID_GID false

ENTRYPOINT ["/docker-entrypoint.sh"]

ENV COMPOSER_ALLOW_SUPERUSER 1
#ENV COMPOSER_GITHUB_TOKEN ""
#ENV COMPOSER_MAGENTO_USERNAME ""
#ENV COMPOSER_MAGENTO_PASSWORD ""
#ENV COMPOSER_BITBUCKET_KEY ""
#ENV COMPOSER_BITBUCKET_SECRET ""

VOLUME /root/.composer/cache

CMD ["bash"]
