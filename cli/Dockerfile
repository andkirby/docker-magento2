#
# This file is automatically generated. Do not edit directly.
#

ARG M2SETUP_PHP=7.1

FROM php:${M2SETUP_PHP}-cli

MAINTAINER Nick Jones <nick@nicksays.co.uk>

RUN apt-get update \

  # Install dependencies
  && apt-get install -y \
    libfreetype6-dev \ 
    libicu-dev \ 
    libjpeg62-turbo-dev \ 
    libmcrypt-dev \ 
    libpng-dev \ 
    libxslt1-dev \ 
    ssmtp \
    sudo \
    cron \
    rsyslog \
    mysql-client \
    git \
    unzip \
    nano \
    # install SSH for Xdebug
    ssh \
  && sh -c 'find /usr/share/nano/ -name *.nanorc | xargs -i echo "include {}"' > ~/.nanorc \

  # Configure the gd library
  && docker-php-ext-configure \
  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \

  # Install required PHP extensions
  && docker-php-ext-install \
    dom \
    gd \
    intl \
    mbstring \
    pdo_mysql \
    xsl \
    zip \
    soap \
    bcmath \
    opcache \

  && pecl install mcrypt \
  && docker-php-ext-enable mcrypt \

  && pecl install apcu \
  && docker-php-ext-enable apcu \

  # Install Xdebug (but don't enable)
  && pecl install -o -f xdebug \
  && docker-php-ext-enable xdebug.so \
  && curl -Ls https://raw.github.com/rikby/xdebug-switcher/master/download | bash \
  && xd_swi off \

  # set up bash aliases and PS1 view
  && echo "# include default /etc/profile" >> ~/.bashrc \
  && echo "source /etc/profile\n" >> ~/.bashrc \
  && curl -Ls bit.ly/bash-init | bash \
  && curl -Ls bit.ly/bash-ps1 | bash \
  && echo '# get to docroot directory' >> ~/.bashrc \
  && echo '[ "${set_path_load:-0}" != 1 ] && [ ${PWD} != /var/www/magento ] && cd /var/www/magento && export set_path_load=1' >> ~/.bashrc \
  && echo >> ~/.bashrc \
  && cp ~/.bashrc /var/www/ \
  && chown www-data:www-data /var/www/.bashrc \

  # Get composer installed to /usr/local/bin/composer
  # composer installation
  && curl -sS https://getcomposer.org/installer \
    | php -- --install-dir=/usr/bin --filename=composer \
  && mkdir -p /var/www/.composer \
  && echo '{}' > /var/www/.composer/composer.json \
  && chown www-data:www-data -R /var/www/.composer \
  # test composer
  && composer --version \

  # Install n98-magerun2.phar and move to /usr/local/bin/
  && curl -L https://files.magerun.net/n98-magerun2.phar --output /usr/local/bin/n98-magerun2.phar \
  && chmod +x /usr/local/bin/n98-magerun2.phar \

  # Install magedbm2.phar and move to /usr/local/bin
  && curl -L https://s3.eu-west-2.amazonaws.com/magedbm2-releases/magedbm2.phar --output /usr/local/bin/magedbm2.phar \
  && chmod +x /usr/local/bin/magedbm2.phar \

  # Install mageconfigsync and move to /usr/local/bin
  && curl -L https://github.com/punkstar/mageconfigsync/releases/download/0.5.0-beta.1/mageconfigsync-0.5.0-beta.1.phar \
    --output /usr/local/bin/mageconfigsync.phar \
  && chmod +x /usr/local/bin/mageconfigsync.phar \

  # speed up composer-install
  && sudo -u www-data -- /usr/bin/composer global require hirak/prestissimo --prefer-dist

ADD . /container-files

# User IDs in host of docker
ARG DOCKER_UID=1000
ARG DOCKER_GID=1000

RUN true \

  && usermod -u ${DOCKER_UID} www-data \
  && groupmod -g ${DOCKER_GID} www-data \
  # allow to login
  && chsh -s /bin/bash www-data \

  && cp /container-files/etc/php-cli.ini    /usr/local/etc/php/conf.d/zz-magento.ini \
  && cp /container-files/etc/php-xdebug.ini /usr/local/etc/php/conf.d/zz-xdebug-settings.ini \
  && cp /container-files/etc/php-opcache.ini /usr/local/etc/php/conf.d/zz-opcache.ini \
  && cp /container-files/etc/php-apc.ini /usr/local/etc/php/conf.d/zz-apc.ini \
  && cp /container-files/etc/mail.ini       /usr/local/etc/php/conf.d/zz-mail.ini \
  && cp /container-files/docker-entrypoint.sh /docker-entrypoint.sh \

  # set up binaries
  && cp /container-files/bin/* /usr/local/bin/ \
  && cp /usr/local/bin/magento-command /usr/local/bin/magento \
  && chmod +x \
    /usr/local/bin/magento-installer \
    /usr/local/bin/magento-command \
    /usr/local/bin/magento \
    /usr/local/bin/magerun2 \
    /usr/local/bin/run-cron \
    /usr/local/bin/composer \
    /usr/local/bin/composer-require \
    /usr/local/bin/composer-remove \

  # Install autocomplete
  && bash /container-files/etc/autocomplete-install.sh \

  && echo '# aliases from Dockerfile' >> /etc/profile \
  && echo 'alias mg=magento' >> /etc/profile \
  && echo 'alias mgi=magento-installer' >> /etc/profile \
  && echo 'alias c=composer' >> /etc/profile \
  && echo 'alias cr=composer-require' >> /etc/profile \
  && echo 'alias crm=composer-remove' >> /etc/profile \

  # remove copied files
  && rm -rf /container-files \

  && chmod +x /docker-entrypoint.sh

# ENV PHP_MEMORY_LIMIT -1
# ENV PHP_ENABLE_XDEBUG false
ENV MAGENTO_ROOT /var/www/magento
# ENV DEBUG false
# ENV UPDATE_UID_GID false

ENTRYPOINT ["/docker-entrypoint.sh"]

ENV HISTFILE=/var/www/magento/.bash_history

ENV COMPOSER_ALLOW_SUPERUSER 0
#ENV COMPOSER_GITHUB_TOKEN ""
#ENV COMPOSER_MAGENTO_USERNAME ""
#ENV COMPOSER_MAGENTO_PASSWORD ""
#ENV COMPOSER_BITBUCKET_KEY ""
#ENV COMPOSER_BITBUCKET_SECRET ""
#ENV COMPOSER_PRIVATE_URL=""
#ENV COMPOSER_PRIVATE_USERNAME=""
#ENV COMPOSER_PRIVATE_PASSWORD=""

VOLUME /root/.composer/cache

CMD ["bash"]
